import"./modulepreload-polyfill-B5Qt9EMX.js";import"./hamburger-BfA7E000.js";import{f as u,g as p,h,i as m}from"./main-BZgMBzPQ.js";import"./index-NIGUFBhG.js";let c=[];document.addEventListener("DOMContentLoaded",()=>{s();const o=document.getElementById("editModal"),t=document.querySelector(".close"),e=document.querySelector(".cancel-btn"),r=document.getElementById("editForm");t&&t.addEventListener("click",()=>{o.style.display="none"}),e&&e.addEventListener("click",()=>{o.style.display="none"}),r&&r.addEventListener("submit",f),window.addEventListener("click",a=>{a.target===o&&(o.style.display="none")})});function i(){const o=localStorage.getItem("user");if(o){const t=JSON.parse(o);if(t.access_token)return{Authorization:`Bearer ${t.access_token}`,"Content-Type":"application/json"}}return{"Content-Type":"application/json"}}async function s(){try{const o=await fetch(u,{headers:i()});if(!o.ok)throw new Error("Error fetching shops");const t=await o.json();c=t,g(t)}catch(o){console.error("Failed to load shops:",o),alert("Error loading shops. Please try again later.")}}function g(o){const t=document.getElementById("shopsContainer");t&&(t.innerHTML="",o.forEach(e=>{const r=document.createElement("div");r.className="shop-card";const a=e.logo_url?`<img src="${e.logo_url}" alt="Logo" class="shop-logo">`:"";r.innerHTML=`
            ${a}
            <h3>${e.shop_name}</h3>
            <p>${e.description}</p>
            <p><strong>Address:</strong> ${e.shop_address||"N/A"}</p>
            <div>
            <button class="edit-btn" data-id="${e.id_shop}">Editar</button>
            <button class="delete-btn" data-id="${e.id_shop}">Borrar</button>
            </div>
        `,t.appendChild(r)}),t.querySelectorAll(".delete-btn").forEach(e=>{e.addEventListener("click",y)}),t.querySelectorAll(".edit-btn").forEach(e=>{e.addEventListener("click",E)}))}async function y(o){const t=o.target.getAttribute("data-id");if(t&&confirm("¿Está seguro que desea borrar esta tienda?"))try{const e=await fetch(p(t),{method:"DELETE",headers:i()});if(e.status===204)alert("Tienda borrada exitosamente"),s();else{let r="Error borrando la tienda";try{r=(await e.json()).detail||r}catch{r=`Error ${e.status}: ${e.statusText}`}throw new Error(r)}}catch(e){console.error("Failed to delete shop:",e),alert("Error borrando la tienda: "+(e.message||e))}}function E(o){const t=o.target.getAttribute("data-id");if(!t)return;const e=l(t);if(!e)return;document.getElementById("editShopName").value=e.shop_name||"",document.getElementById("editDescription").value=e.description||"",document.getElementById("editAddress").value=e.shop_address||"";const r=document.getElementById("currentLogo"),a=document.getElementById("noLogoText");e.logo_url?(r.src=e.logo_url,r.style.display="block",a.style.display="none"):(r.style.display="none",a.style.display="block"),document.getElementById("editForm").setAttribute("data-shop-id",t),document.getElementById("editModal").style.display="block"}function l(o){return c.find(e=>e.id_shop==o)||null}async function f(o){o.preventDefault();const t=o.target,e=t.getAttribute("data-shop-id");if(!e)return;const r=l(e);if(!r)return;const a=new FormData(t);a.append("id_user",r.id_user),a.append("is_active",r.is_active),document.getElementById("editModal").style.display="none";const n=a.get("logo");if(n&&n.size>0)await S(e,a);else{const d={shop_name:a.get("shop_name")||document.getElementById("editShopName").value,description:a.get("description")||document.getElementById("editDescription").value,shop_address:a.get("shop_address")||document.getElementById("editAddress").value};await b(e,d)}}async function b(o,t){try{const e=await fetch(h(o),{method:"PUT",headers:i(),body:JSON.stringify(t)});if(!e.ok){let r="Error actualizando la tienda";try{r=(await e.json()).detail||r}catch{r=`Error ${e.status}: ${e.statusText}`}throw new Error(r)}alert("Tienda actualizada exitosamente"),s()}catch(e){console.error("Failed to update shop:",e),alert("Error actualizando la tienda: "+(e.message||e))}}async function S(o,t){try{const e=localStorage.getItem("user");let r="";e&&(r=JSON.parse(e).access_token||"");const a=await fetch(m(o),{method:"PUT",headers:{Authorization:`Bearer ${r}`},body:t});if(!a.ok){let n="Error actualizando la tienda con imagen";try{n=(await a.json()).detail||n}catch{n=`Error ${a.status}: ${a.statusText}`}throw new Error(n)}alert("Tienda actualizada exitosamente con imagen"),s()}catch(e){console.error("Failed to update shop with image:",e),alert("Error actualizando la tienda con imagen: "+(e.message||e))}}
